{"uid":"57e5efd6d5bc4acf","name":"test_info_new_user","fullName":"test_hoster.TestHoster#test_info_new_user","historyId":"86bb53f5d5a587f399c14cef2800ce03","time":{"start":1696751434043,"stop":1696751434407,"duration":364},"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: Incorrect status code","statusTrace":"self = <test_hoster.TestHoster object at 0x7fafed7ee290>\ntest_create_new_user = '877'\n\n    @allure.step('Test new user info.')\n    @pytest.mark.xfail\n    def test_info_new_user(self, test_create_new_user):\n        print('\\n\\nMethod GET: Check user info new user')\n        result_get = HosterAPI.checking_new_user(test_create_new_user)\n        result_get_new_user = json.loads(result_get.text)\n>       Checking.check_status_code(result_get, 200)\n\ntest_hoster.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [404]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"test_create_new_user","time":{"start":1696751433635,"stop":1696751434042,"duration":407},"status":"passed","steps":[{"name":"Test create new user.","time":{"start":1696751433636,"stop":1696751434042,"duration":406},"status":"passed","steps":[{"name":"Method POST","time":{"start":1696751433636,"stop":1696751434040,"duration":404},"status":"passed","steps":[{"name":"Add request","time":{"start":1696751433636,"stop":1696751433636,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users'"},{"name":"method","value":"'POST'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Add response","time":{"start":1696751434040,"stop":1696751434040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"result","value":"<Response [201]>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users'"},{"name":"body","value":"{'name': 'lambotik', 'job': 'qa'}"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nAssertionError: Incorrect status code","statusTrace":"self = <test_hoster.TestHoster object at 0x7fafed7ee290>\ntest_create_new_user = '877'\n\n    @allure.step('Test new user info.')\n    @pytest.mark.xfail\n    def test_info_new_user(self, test_create_new_user):\n        print('\\n\\nMethod GET: Check user info new user')\n        result_get = HosterAPI.checking_new_user(test_create_new_user)\n        result_get_new_user = json.loads(result_get.text)\n>       Checking.check_status_code(result_get, 200)\n\ntest_hoster.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [404]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError","steps":[{"name":"Test new user info.","time":{"start":1696751434044,"stop":1696751434406,"duration":362},"status":"failed","statusMessage":"AssertionError: Incorrect status code\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/hoster_API/hoster_API/test_hoster.py\", line 35, in test_info_new_user\n    Checking.check_status_code(result_get, 200)\n  File \"/home/runner/work/hoster_API/hoster_API/utils/checking.py\", line 17, in check_status_code\n    assert status_code == result.status_code, 'Incorrect status code'\n","steps":[{"name":"Method GET","time":{"start":1696751434044,"stop":1696751434406,"duration":362},"status":"passed","steps":[{"name":"Add request","time":{"start":1696751434044,"stop":1696751434044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users/877'"},{"name":"method","value":"'GET'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Add response","time":{"start":1696751434406,"stop":1696751434406,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"result","value":"<Response [404]>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"url","value":"'https://reqres.in/api/users/877'"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"test_create_new_user","value":"'877'"}],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"570f976f310865d6","name":"stdout","source":"570f976f310865d6.txt","type":"text/plain","size":412}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Test Hoster."},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"suite","value":"test_hoster"},{"name":"subSuite","value":"TestHoster"},{"name":"host","value":"fv-az790-538"},{"name":"thread","value":"2062-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_hoster"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"57e5efd6d5bc4acf.json","parameterValues":[]}